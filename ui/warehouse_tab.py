import random
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import (
    QWidget, QTabWidget,
    QTableWidgetItem,
    QVBoxLayout,
)

from .config_tab import ConfigTab


class WarehouseConfigTab(QWidget):
    def __init__(self):
        super().__init__()
        self.tabs = QTabWidget()

        self.meds_tab = ConfigTab(
            9,
            [
                '–ù–∞–∑–≤–∞–Ω–∏–µ', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', '–î–æ–∑–∏—Ä–æ–≤–∫–∞', '–¢–∏–ø',
                '–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏', '–û–ø—Ç–æ–≤–∞—è —Ü–µ–Ω–∞', '–ì—Ä—É–ø–ø–∞',
                '–ó–∞–∫—É–ø–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ', '–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'
            ],
            self.generate_medicines
        )
        self.meds_tab.generate_data()

        self.customers_tab = ConfigTab(
            6,
            [
                '–ò–º—è', '–¢–µ–ª–µ—Ñ–æ–Ω', '–ê–¥—Ä–µ—Å',
                '–î–∏—Å–∫–æ–Ω—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞', '–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–∞–∫–∞–∑—ã', '–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å'
            ],
            self.generate_customers
        )
        self.customers_tab.generate_data()

        self.tabs.addTab(self.meds_tab, "üíä –õ–µ–∫–∞—Ä—Å—Ç–≤–∞")
        self.tabs.addTab(self.customers_tab, "üë• –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã")

        layout = QVBoxLayout()
        layout.addWidget(self.tabs)
        self.setLayout(layout)

    def generate_medicines(self, table, rows):
        types = ["–¢–∞–±–ª–µ—Ç–∫–∏", "–°–ø—Ä–µ–π", "–ú–∞–∑—å", "–ö–∞–ø–ª–∏"]
        groups = ["–°–µ—Ä–¥–µ—á–Ω—ã–µ", "–ê–Ω—Ç–∏–±–∏–æ—Ç–∏–∫–∏", "–û–±–µ–∑–±–æ–ª–∏–≤–∞—é—â–∏–µ"]

        table.setRowCount(rows)
        for row in range(rows):
            data = [
                f"–õ–µ–∫–∞—Ä—Å—Ç–≤–æ {row+1}",
                str(random.randint(50, 200)),
                str(random.choice([50, 100, 200])),
                random.choice(types),
                str(random.randint(10, 31)),
                f"{random.uniform(10, 100):.2f}",
                random.choice(groups),
                str(random.randint(20, 100)),
                str(random.randint(5, 20))
            ]
            for col, value in enumerate(data):
                item = QTableWidgetItem(value)
                if col in [7, 8]:
                    item.setTextAlignment(Qt.AlignRight | Qt.AlignVCenter)
                table.setItem(row, col, item)

    def generate_customers(self, table, rows):
        streets = ["–õ–µ–Ω–∏–Ω–∞", "–ì–∞–≥–∞—Ä–∏–Ω–∞", "–°–æ–≤–µ—Ç—Å–∫–∞—è"]
        meds_data = self.meds_tab.get_data()
        med_names = [row[0] for row in meds_data if row]

        table.setRowCount(rows)
        for row in range(rows):
            discount = "–î–∞" if random.random() > 0.5 else "–ù–µ—Ç"
            orders = ", ".join(
                f"{random.choice(med_names)}:{random.randint(1,5)}"
                for _ in range(random.randint(1,3))
            ) if med_names else ""

            data = [
                f"–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π {row+1}",
                f"+7{random.randint(9000000000, 9999999999)}",
                f"—É–ª. {random.choice(streets)}, {random.randint(1, 100)}",
                discount,
                orders,
                str(random.randint(2, 7))
            ]
            for col, value in enumerate(data):
                table.setItem(row, col, QTableWidgetItem(value))

    def get_medicines_data(self):
        return self.meds_tab.get_data()

    def get_customers_data(self):
        return self.customers_tab.get_data()
